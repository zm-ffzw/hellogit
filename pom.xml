<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>3.5.6</version>
    </parent>
    <groupId>com.sky</groupId>
    <artifactId>sky-take-out</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>sky-common</module>
        <module>sky-pojo</module>
        <module>sky-server</module>
    </modules>
    <properties>
        <java.version>21</java.version> <!-- Spring Boot 3.5.x 推荐 Java 17+，21是稳定选择 -->
        <fastjson>2.0.47</fastjson> <!-- FastJson 2.x 适配 Java 17+ 和 Spring 6 -->
        <commons-lang3>3.14.0</commons-lang3> <!-- 注意：commons-lang 已停止维护，升级为 commons-lang3 -->
        <druid>1.2.20</druid> <!-- Druid 最新稳定版，支持 Spring Boot 3 -->
        <pagehelper>1.4.7</pagehelper> <!-- PageHelper 适配 MyBatis 3.5+ 和 Spring Boot 3 -->
        <aliyun.sdk.oss>3.10.2</aliyun.sdk.oss>
        <aspectj>1.9.20.1</aspectj> <!-- AspectJ 最新版，兼容 Spring 6 -->
        <jjwt>0.11.5</jjwt> <!-- JJWT 0.11.x 支持 Java 17+，修复安全漏洞 -->
        <jaxb-api>4.0.4</jaxb-api> <!-- JAXB API 4.x 适配 Java 17+ -->
        <poi>5.2.5</poi> <!-- Apache POI 5.x 支持 Java 11+，适配 Spring Boot 3 -->
        <mysql-connector>8.3.0</mysql-connector> <!-- MySQL 8.x 驱动，适配 Spring Boot 3 -->
        <mybatis-spring-boot>3.0.3</mybatis-spring-boot> <!-- MyBatis 适配 Spring Boot 3 -->
        <lombok>1.18.30</lombok> <!-- Lombok 最新版，支持 Java 21 和 Spring Boot 3 -->
        <langchain4j>1.1.0</langchain4j>
        <langchain4j-api>1.1.0-beta7</langchain4j-api>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- 声明内部子模块版本（与父项目版本一致） -->
            <dependency>
                <groupId>com.sky</groupId>
                <artifactId>sky-common</artifactId>
                <version>${project.version}</version> <!-- 引用父项目版本 1.0-SNAPSHOT -->
            </dependency>
            <dependency>
                <groupId>com.sky</groupId>
                <artifactId>sky-pojo</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- MyBatis 适配 Spring Boot 3 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot}</version>
            </dependency>

            <!-- Lombok 支持 Java 21 和 Spring Boot 3 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok}</version>
                <scope>provided</scope>
            </dependency>

            <!-- MySQL 驱动（8.x 适配 Spring Boot 3 和 Java 17+） -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId> <!-- 注意：MySQL 8.x artifactId 已改为 mysql-connector-j -->
                <version>${mysql-connector}</version>
            </dependency>

            <!-- FastJson 2.x（适配 Java 17+ 和 Spring 6） -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson}</version>
            </dependency>

            <!-- Apache Commons Lang3（替代停止维护的 commons-lang） -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3}</version>
            </dependency>

            <!-- Druid 数据库连接池（支持 Spring Boot 3） -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid}</version>
            </dependency>

            <!-- PageHelper 分页插件（适配 MyBatis 3.5+） -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper}</version>
            </dependency>

            <!-- Knife4j（Swagger 接口文档，适配 Spring Boot 3） -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>4.4.0</version>
            </dependency>

            <!-- AspectJ（AOP 支持，兼容 Spring 6） -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj}</version>
            </dependency>

            <!-- JJWT（JWT 工具，修复旧版本安全漏洞） -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId> <!-- 替代旧版 jjwt 默认的 JSON 处理器 -->
                <version>${jjwt}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- 阿里云 OSS SDK -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun.sdk.oss}</version>
            </dependency>

            <!-- JAXB API（Java 17+ 需显式引入，处理 XML 相关操作） -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId> <!-- 注意：Java EE 已迁移为 Jakarta EE，包名变更 -->
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jaxb-api}</version>
            </dependency>

            <!-- Apache POI（Excel 处理，适配 Java 11+） -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi}</version>
            </dependency>

            <!-- 微信支付 SDK -->
            <dependency>
                <groupId>com.github.wechatpay-apiv3</groupId>
                <artifactId>wechatpay-apache-httpclient</artifactId>
                <version>0.4.8</version>
            </dependency>
            <!-- langchain4j 配置-->
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-community-dashscope-spring-boot-starter</artifactId>
                <version>${langchain4j}</version>
            </dependency>
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j</artifactId>
                <version>${langchain4j}</version>
            </dependency>

            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-mcp</artifactId>
                <version>${langchain4j}</version>
            </dependency>
            <!--流式响应-->
            <dependency>
                <groupId>dev.langchain4j</groupId>
                <artifactId>langchain4j-reactor</artifactId>
                <version>${langchain4j}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- 父 POM (sky-take-out/pom.xml) -->
    <build>
        <!-- 插件版本管理：子模块自动继承，避免重复配置 -->
        <pluginManagement>
            <plugins>
                <!-- 1. 降级 maven-clean-plugin（清理插件） -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.2.0</version> <!-- 兼容 Maven 3.5+ -->
                </plugin>

                <!-- 2. 降级 maven-compiler-plugin（编译插件，当前报错核心） -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version> <!-- 兼容 Maven 3.5+，解决当前报错 -->
                    <configuration>
                        <!-- 引用父 POM 中定义的 java.version（21），保持版本一致 -->
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding> <!-- 避免中文乱码 -->
                    </configuration>
                </plugin>

                <!-- 3. 降级 maven-surefire-plugin（测试插件，避免后续报错） -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version> <!-- 兼容 Maven 3.5+，支持测试用例执行 -->
                </plugin>

                <!-- 4. 适配 Spring Boot 打包插件（若后续打包报错，可添加此配置） -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>3.2.0</version> <!-- 降级到兼容 Maven 3.6.1 的 Spring Boot 打包插件版本 -->
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.junit.jupiter</groupId>
                                <artifactId>junit-jupiter-api</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- 新增：降级 maven-jar-plugin（打包成 JAR 的插件） -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version> <!-- 3.2.0 兼容 Maven 3.5+，解决当前报错 -->
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
